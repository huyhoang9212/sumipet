@model HeaderLinksModel
@inject Nop.Core.IWebHelper webHelper

<header class="header petmark-header-1">
    <div class="header-wrapper">
        <!-- Site Wrapper Starts -->
        <div class="header-top bg-ash">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-sm-6 text-center text-sm-left">
                        <p class="font-weight-300">Welcome to Sumi Pet</p>
                    </div>
                    <div class="col-sm-6">
                        <div class="header-top-nav right-nav">
                            @if (Model.IsAuthenticated)
                            {
                                <div class="nav-item slide-down-wrapper">
                                    <span>Welcome:<span> </span></span>
                                    <a class="slide-down--btn" href="@Url.RouteUrl("CustomerInfo")" role="button">
                                        @Model.CustomerName
                                    </a>

                                </div>

                                <div class="nav-item slide-down-wrapper">
                                    @*<a class="slide-down--btn" href="#" role="button">
                                            Thoát<i class="ico-logout"></i>
                                        </a>*@

                                    <a href="@Url.RouteUrl("Logout")" class="ico-logout">Thoát</a>
                                </div>
                            }
                            else
                            {
                                var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
                                              ? url.ToString()
                                              : webHelper.GetRawUrl(Context.Request);

                                <ul class="header-links">
                                    <li><a href="@Url.RouteUrl("Register", new { returnUrl })"><i class="fas fa-user"></i> Đăng Ký</a></li>
                                    <li><a href="@Url.RouteUrl("Login", new { returnUrl })"><i class="fas fa-user"></i> Đăng Nhập</a></li>
                                </ul>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="header-middle">
            <div class="container">
                <div class="row align-items-center justify-content-center">
                    <!-- Template Logo -->
                    <div class="col-lg-3 col-md-12 col-sm-4">
                        <div class="site-brand  text-center text-lg-left">
                            <a href="@Url.RouteUrl("Homepage")" class="brand-image">
                                <img src="image/main-logo.png" alt="Trang chủ">
                            </a>
                        </div>
                    </div>
                    <!-- Category With Search -->
                    <!-- Category With Search -->
                    <div class="col-lg-5 col-md-7 order-3 order-md-2">
                        <form class="category-widget">
                            <input type="text" name="search" placeholder="Tìm kiếm">
                 
                            <button class="search-submit"><i class="fas fa-search"></i></button>
                        </form>
                    </div>


                        <!-- Call Login & Track of Order -->
                        <div class="col-lg-4 col-md-6 col-sm-8 order-2 order-md-3">
                            <div class="header-widget-2 text-center text-md-right ">
                                <div class="call-widget">
                                    <p>
                                        LIÊN HỆ NGAY: <i class="icon ion-ios-telephone"></i><span class="font-weight-mid">
                                            +0908-934-369
                                        </span>
                                    </p>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
        </div>

    </div>

    <!-- Menu -->
    @await Component.InvokeAsync("SumiTopMenu")

</header>

@if (false)
{
    <div class="header">
        <div class="header-upper">
            <div class="header-selectors-wrapper">
            </div>
            <div class="header-links-wrapper">
                <div class="header-links">
                    <ul>
                        @if (Model.IsAuthenticated)
                        {
                            <li><a href="@Url.RouteUrl("CustomerInfo")" class="ico-account">@Model.CustomerName@*@T("Account.MyAccount")*@</a></li>
                            <li><a href="@Url.RouteUrl("Logout")" class="ico-logout">@T("Account.Logout")</a></li>
                        }
                        else
                        {
                            var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
                            ? url.ToString()
                            : webHelper.GetRawUrl(Context.Request);

                            <li><a href="@Url.RouteUrl("Register", new { returnUrl })" class="ico-register">@T("Account.Register")</a></li>
                            <li><a href="@Url.RouteUrl("Login", new { returnUrl })" class="ico-login">@T("Account.Login")</a></li>
                        }

                        @if (Model.ShoppingCartEnabled)
                        {
                            <li id="topcartlink">
                                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">
                                    <span class="cart-label">@T("ShoppingCart")</span>
                                    <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
                                </a>
                            </li>
                        }


                    </ul>


                    @if (Model.ShoppingCartEnabled)
                    {
                        <script asp-location="Footer">
                            $(document).ready(function () {
                                $('.header').on('mouseenter', '#topcartlink', function () {
                                    $('#flyout-cart').addClass('active');
                                });
                                $('.header').on('mouseleave', '#topcartlink', function () {
                                    $('#flyout-cart').removeClass('active');
                                });
                                $('.header').on('mouseenter', '#flyout-cart', function () {
                                    $('#flyout-cart').addClass('active');
                                });
                                $('.header').on('mouseleave', '#flyout-cart', function () {
                                    $('#flyout-cart').removeClass('active');
                                });
                            });
                        </script>
                    }

                </div>


                @await Component.InvokeAsync("FlyoutShoppingCart")
            </div>
        </div>

        <div class="header-lower">
            <div class="header-logo">
                @await Component.InvokeAsync("Logo")
            </div>
            <div class="search-box store-search-box">
                @await Component.InvokeAsync("SearchBox")
            </div>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderAfter })
    </div>
}





@model ProductDetailsModel
@using Nop.Core.Domain.Seo;
@using Nop.Core.Domain.Orders

@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-product-details-page");

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, webHelper.CurrentRequestProtocol).ToLowerInvariant();
        Html.AddCanonicalUrlParts(productUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image:url\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
    }

    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
 
    addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });

}
<!--product breadcrumb-->
@section Breadcrumb
{
    @await Html.PartialAsync("_SumiProductBreadcrumb", Model.Breadcrumb)
}

@if (1 == 2)
{

    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAfterBreadcrumb, additionalData = Model })
    <div class="page product-details-page">
        <div class="page-body">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsTop, additionalData = Model })
            <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
                @if (seoSettings.MicrodataEnabled)
                {
                    @await Html.PartialAsync("_Microdata", Model)
                }
                <div data-productid="@Model.Id">
                    <div class="product-essential">
                        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsEssentialTop, additionalData = Model })
                        <!--product pictures-->
                        @await Html.PartialAsync("_ProductDetailsPictures", Model)
                        <div class="overview">
                            @await Html.PartialAsync("_Discontinued", Model)
                            <div class="product-name">
                                <h1>
                                    @Model.Name
                                </h1>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.ShortDescription))
                            {
                                <div class="short-description">
                                    @Html.Raw(Model.ShortDescription)
                                </div>
                            }
                            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsOverviewTop, additionalData = Model })
                            <!--product reviews-->
                            @await Html.PartialAsync("_ProductReviewOverview", Model.ProductReviewOverview)
                            <!--manufacturers-->
                            @await Html.PartialAsync("_ProductManufacturers", Model.ProductManufacturers)
                            <!--availability-->
                            @await Html.PartialAsync("_Availability", Model)
                            <!--SKU, MAN, GTIN, vendor-->
                            @await Html.PartialAsync("_SKU_Man_GTIN_Ven", Model)
                            <!--delivery-->
                            @await Html.PartialAsync("_DeliveryInfo", Model)
                            <!--sample download-->
                            @await Html.PartialAsync("_DownloadSample", Model)
                            <!--attributes-->
                            @{
                                var dataDictAttributes = new ViewDataDictionary(ViewData);
                                dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
                                @await Html.PartialAsync("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                            }
                            <!--gift card-->
                            @{
                                var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = $"giftcard_{Model.Id}";
                                @await Html.PartialAsync("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                            }
                            <!--rental info-->
                            @{
                                var dataDictRental = new ViewDataDictionary(ViewData);
                                dataDictRental.TemplateInfo.HtmlFieldPrefix = $"rental_{Model.Id}";
                                @await Html.PartialAsync("_RentalInfo", Model, dataDictRental)
                            }
                            <!--price & add to cart & estimate shipping-->
                            @{
                                var dataDictPrice = new ViewDataDictionary(ViewData);
                                dataDictPrice.TemplateInfo.HtmlFieldPrefix = $"price_{Model.Id}";
                                @await Html.PartialAsync("_ProductPrice", Model.ProductPrice, dataDictPrice)

                                @await Html.PartialAsync("_ProductTierPrices", Model.TierPrices)

                                var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)

                                @await Html.PartialAsync("_ProductEstimateShipping", Model.ProductEstimateShipping)
                            }
                            <!--wishlist, compare, email a friend-->
                            <div class="overview-buttons">
                                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsInsideOverviewButtonsBefore, additionalData = Model })
                                @{
                                    var dataDictAddToWishlist = new ViewDataDictionary(ViewData);
                                    dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                    @await Html.PartialAsync("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                }
                                @await Html.PartialAsync("_CompareProductsButton", Model)
                                @await Html.PartialAsync("_ProductEmailAFriendButton", Model)
                                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsInsideOverviewButtonsAfter, additionalData = Model })
                            </div>
                            @await Html.PartialAsync("_ShareButton", Model)
                            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsOverviewBottom, additionalData = Model })
                        </div>
                        @if (!string.IsNullOrEmpty(Model.FullDescription))
                        {
                            <div class="full-description">
                                @Html.Raw(Model.FullDescription)
                            </div>
                        }
                        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsEssentialBottom, additionalData = Model })
                    </div>
                    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsBeforeCollateral, additionalData = Model })
                    <div class="product-collateral">
                        @await Html.PartialAsync("_ProductSpecifications", Model.ProductSpecifications)
                        @await Html.PartialAsync("_ProductTags", Model.ProductTags)
                    </div>
                    @await Component.InvokeAsync("ProductsAlsoPurchased", new { productId = Model.Id })
                    @await Component.InvokeAsync("RelatedProducts", new { productId = Model.Id })
                </div>
            </form>
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsBottom, additionalData = Model })
        </div>
    </div>
}


<main class="product-details-section">
    <div class="container">
        <div class="pm-product-details">
            <div class="row">
                <!-- Blog Details Image Block -->
                <div class="col-md-6">
                    <div class="image-block">
                        <!-- Zoomable IMage -->
                        @*<a href="@Model.DefaultPictureModel.FullSizeImageUrl" title="@Model.DefaultPictureModel.Title"
                               id="main-product-img-lightbox-anchor-@Model.Id">
                                <img alt="@Model.DefaultPictureModel.AlternateText"
                                     src="@Model.DefaultPictureModel.ImageUrl"
                                     title="@Model.DefaultPictureModel.Title" id="main-product-img-@Model.Id" />
                            </a>*@

                        <img id="zoom_03" src="@Model.DefaultPictureModel.ImageUrl"
                             data-zoom-image="@Model.DefaultPictureModel.ImageUrl" alt="@Model.DefaultPictureModel.AlternateText"
                             title="@Model.DefaultPictureModel.Title" />

                        <!-- Product Gallery with Slick Slider -->
                        <div id="product-view-gallery" class="elevate-gallery">
                            @foreach (var picture in Model.PictureModels)
                            {
                                @*<a class="thumb-item" href="@picture.FullSizeImageUrl" alt="@picture.AlternateText" title="@picture.Title">
                                        <img src="@picture.ThumbImageUrl" alt="@picture.AlternateText" title="@picture.Title" data-defaultsize="@picture.ImageUrl" data-fullsize="@picture.FullSizeImageUrl" />
                                    </a>*@
                                <!-- Slick Single -->
                                <a href="#" class="gallary-item" data-image="@picture.ImageUrl"
                                   data-zoom-image="@picture.ImageUrl">
                                    <img src="@picture.ThumbImageUrl" alt="" />
                                </a>
                            }

                        </div>
                    </div>
                </div>
                <div class="col-md-6 mt-5 mt-md-0">
                    <div class="description-block">
                        <div class="header-block">
                            <h3>@Model.Name</h3>

                        </div>
                        <!-- Rating Block -->
                        <div class="rating-block d-flex  mt--10 mb--15">
                            <div class="rating-widget">
                                <a href="#" class="single-rating"><i class="fas fa-star"></i></a>
                                <a href="#" class="single-rating"><i class="fas fa-star"></i></a>
                                <a href="#" class="single-rating"><i class="fas fa-star"></i></a>
                                <a href="#" class="single-rating"><i class="fas fa-star"></i></a>
                                <a href="#" class="single-rating"><i class="far fa-star"></i></a>
                            </div>
                            @*<p class="rating-text"><a href="#comment-form">(1 customer review)</a></p>*@
                        </div>
                        <!-- Price -->


                        <p class="price">
                            @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                            {
                                <span class="old-price">@Model.ProductPrice.OldPrice</span>
                            }
                            @Model.ProductPrice.Price
                        </p>
                        @*<p class="price"><span class="old-price">250$</span>300$</p>*@



                        <!-- Blog Short Description -->
                        <div class="product-short-para">
                            <p>
                                @Model.ShortDescription
                            </p>
                        </div>
                        @*<div class="status">
                                <i class="fas fa-check-circle"></i>300 IN STOCK
                            </div>*@

                        <!-- Amount and Add to cart -->
                        <form action="./" class="add-to-cart">
                            <div class="count-input-block">
                                <input type="number" class="form-control text-center" value="1">
                            </div>
                            <div class="btn-block">
                                @*<a href="#" class="btn btn-rounded btn-outlined--primary">Thêm vào giỏ hàng</a>*@
                                <input type="button" class="btn btn-rounded btn-outlined--primary" value="Thêm vào giỏ hàng" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" />

                            </div>
                        </form>
                        <!-- Wishlist And Compare -->
                        @*<div class="btn-options">
                                <a href="wishlist.html"><i class="ion-ios-heart-outline"></i>Add to Wishlist</a>
                                <a href="compare.html"><i class="ion-ios-shuffle"></i>Add to Compare</a>
                            </div>*@

                        <!-- Products Tag & Category Meta -->
                        <div class="product-meta mt--30">
                            @*<p>
                                    Ctagories: <a href="#" class="single-meta">Bedroom</a>, <a href="#" class="single-meta">
                                        Decor
                                        & Furniture
                                    </a>
                                </p>*@
                            @*<p>Thẻ: <a href="#" class="single-meta">Food</a></p>*@

                        </div>
                        <!-- Share Block 1 -->
                        <div class="share-block-1">
                            <ul class="social-btns">
                                <li><a href="#" class="facebook"><i class="far fa-thumbs-up"></i><span>likes 1</span></a></li>
                                <li><a href="#" class="twitter"><i class="fab fa-twitter"></i> <span>twitter</span></a></li>
                                <li><a href="#" class="google"><i class="fas fa-plus-square"></i> <span>share</span></a></li>
                            </ul>
                        </div>
                        <!-- Sharing Block 2 -->
                        <div class="share-block-2  mt--30">
                            <h4>Chia sẻ sản phẩm</h4>
                            <ul class="social-btns social-btns-2">
                                <li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                                <li><a href="#"><i class="fab fa-twitter"></i></a></li>
                                <li><a href="#"><i class="fab fa-google-plus-g"></i></a></li>
                                <li><a href="#"><i class="fab fa-pinterest-p"></i></a></li>
                                <li><a href="#"><i class="fab fa-linkedin-in"></i></a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <section class="review-section pt--60">
        <h2 class="sr-only d-none">Product Review</h2>
        <div class="container">

            <div class="product-details-tab">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">CHI TIẾT SẢN PHẨM</a>
                    </li>
                    @*<li class="nav-item">
                            <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">REVIEWS (1)</a>
                        </li>*@
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                        <article>
                            @Html.Raw(Model.FullDescription)

                        </article>
                    </div>

                    @*<div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                            <div class="review-wrapper">
                                <h2 class="title-lg mb--20">1 REVIEW FOR AUCTOR GRAVIDA ENIM</h2>
                                <div class="review-comment mb--20">
                                    <div class="avatar">
                                        <img src="image/icon-logo/author-logo.png" alt="">
                                    </div>
                                    <div class="text">
                                        <div class="rating-widget mb--15">
                                            <span class="single-rating"><i class="fas fa-star"></i></span>
                                            <span class="single-rating"><i class="fas fa-star"></i></span>
                                            <span class="single-rating"><i class="fas fa-star"></i></span>
                                            <span class="single-rating"><i class="fas fa-star-half-alt"></i></span>
                                            <span class="single-rating"><i class="far fa-star"></i></span>
                                        </div>
                                        <h6 class="author">ADMIN –  <span class="font-weight-400">March 23, 2015</span> </h6>
                                        <p>Lorem et placerat vestibulum, metus nisi posuere nisl, in accumsan elit odio quis mi.</p>
                                    </div>
                                </div>
                                <h2 class="title-lg mb--20 pt--15">ADD A REVIEW</h2>
                                <div class="rating-row pt-2">
                                    <p class="d-block">Your Rating</p>
                                    <span class="rating-widget-block">
                                        <input type="radio" name="star" id="star1">
                                        <label for="star1"></label>
                                        <input type="radio" name="star" id="star2">
                                        <label for="star2"></label>
                                        <input type="radio" name="star" id="star3">
                                        <label for="star3"></label>
                                        <input type="radio" name="star" id="star4">
                                        <label for="star4"></label>
                                        <input type="radio" name="star" id="star5">
                                        <label for="star5"></label>
                                    </span>
                                    <form action="./" class="mt--15 site-form ">
                                        <div class="row">
                                            <div class="col-12">
                                                <div class="form-group">
                                                    <label for="message">Comment</label>
                                                    <textarea name="message" id="message" cols="30" rows="10" class="form-control"></textarea>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label for="name">Name *</label>
                                                    <input type="text" id="name" class="form-control">
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label for="email">Email *</label>
                                                    <input type="text" id="email" class="form-control">
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label for="website">Website</label>
                                                    <input type="text" id="website" class="form-control">
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="submit-btn">
                                                    <a href="#" class="btn btn-black">Post Comment</a>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>*@

                </div>
            </div>
        </div>
    </section>



    @await Component.InvokeAsync("SumiRelatedProducts", new { productId = Model.Id })


</main>